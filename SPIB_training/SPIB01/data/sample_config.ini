# Sample configuration file for the analysis of four-well analytical potential

[Model Parameters]
# Time delay delta t in terms of # of minimal time resolution of the trajectory data
dt = [1000]

# Dimension of RC or bottleneck
d = [2]

# Encoder type (Linear or Nonlinear)
encoder_type = Linear

# Number of nodes in each hidden layer of the encoder
neuron_num1 = [32]

# Number of nodes in each hidden layer of the decoder
neuron_num2 = [64]


[Training Parameters]

batch_size = 128

# Threshold in terms of the change of the predicted state population for measuring the convergence of training 
threshold = 0.02

# Number of epochs with the change of the state population smaller than the threshold after which this iteration of training finishes
patience = 2

# Number of refinements
refinements = 7

# Period of learning rate decay
lr_scheduler_step_size = 5

# Multiplicative factor of learning rate decay. Default: 1 (No learning rate decay)
lr_scheduler_gamma = 0.80

# By default, we save the model every 10000 steps
log_interval = 10000

# Initial learning rate of Adam optimizer
learning_rate = [1e-5]

# Hyper-parameter beta
beta = [1e-4]

[Data]
# Path to the trajectory data
; traj_data = [examples/Four_Well_beta3_gamma4_traj_data.npy]
traj_data =[data/normalized_traj_path_metaD1.npy,data/normalized_traj_path_metaD2.npy,data/normalized_traj_path_metaD3.npy,data/normalized_traj_path_metaD4.npy]
# For mulitple trajectroies, traj_data = [path to traj0 data, path to traj1 data, path to traj2 data]

# Path to the initial state labels
initial_labels = [data/labels_metaD1.npy,data/labels_metaD2.npy,data/labels_metaD3.npy,data/labels_metaD4.npy]
# For mulitple trajectroies, initial_labels = [path to traj0 labels, path to traj1 labels, path to traj2 labels]

# Path to the weights of the samples, by default all the samples have the same weights
traj_weights 
# traj_weights = [path to traj weights]
# For mulitple trajectroies, traj_weights = [path to traj0 weights, path to traj1 weights, path to traj2 weights]


[Other Controls]
# Random seed
seed = [0]

# Whether to refine the labels during the training process
UpdateLabel = True

# Whether save trajectory results
SaveTrajResults = True
